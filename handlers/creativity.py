from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from database.database import Database
from keyboards.creativity import CreativityKeyboard
from keyboards.main_menu import MainMenuKeyboard
from handlers.exercises import send_video, get_direct_download_link
import random
import logging

router = Router()

class CreativityStates(StatesGroup):
    waiting_for_photo = State()

SECTION_DESCRIPTIONS = {
    "drawing": {
        "title": "üé® –†–∏—Å–æ–≤–∞–Ω–∏–µ",
        "description": (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –†–∏—Å–æ–≤–∞–Ω–∏—è!\n\n"
            "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç:\n"
            "‚Ä¢ –†–∞–∑–≤–∏—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –û—Å–≤–æ–∏—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è\n"
            "‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ –∫–∞—Ä—Ç–∏–Ω—ã\n\n"
            "–ó–∞ –∫–∞–∂–¥—ã–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å —Ç—ã –ø–æ–ª—É—á–∏—à—å üíé –ê–ª–º–∞–∑!"
        )
    },
    "paper": {
        "title": "üìÑ –ë—É–º–∞–∂–Ω–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ",
        "description": (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –ë—É–º–∞–∂–Ω–æ–≥–æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞!\n\n"
            "–ó–¥–µ—Å—å —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å:\n"
            "‚Ä¢ –û—Ä–∏–≥–∞–º–∏\n"
            "‚Ä¢ –ê–ø–ø–ª–∏–∫–∞—Ü–∏–∏\n"
            "‚Ä¢ –û–±—ä–µ–º–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã\n\n"
            "–ó–∞ –∫–∞–∂–¥—ã–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å —Ç—ã –ø–æ–ª—É—á–∏—à—å üíé –ê–ª–º–∞–∑!"
        )
    },
    "sculpting": {
        "title": "üè∫ –õ–µ–ø–∫–∞",
        "description": (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –õ–µ–ø–∫–∏!\n\n"
            "–ó–¥–µ—Å—å —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è:\n"
            "‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å —Å –ø–ª–∞—Å—Ç–∏–ª–∏–Ω–æ–º\n"
            "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–º–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã\n"
            "‚Ä¢ –†–∞–∑–≤–∏–≤–∞—Ç—å –º–µ–ª–∫—É—é –º–æ—Ç–æ—Ä–∏–∫—É\n\n"
            "–ó–∞ –∫–∞–∂–¥—ã–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å —Ç—ã –ø–æ–ª—É—á–∏—à—å üíé –ê–ª–º–∞–∑!"
        )
    }
}

MOTIVATION_MESSAGES = [
    "üåü –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —Ç–≤–æ—Ä–µ—Ü!",
    "‚ú® –ü–æ—Ç—Ä—è—Å–∞—é—â–µ! –¢–≤–æ–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ä–∞—Å—Ç—É—Ç —Å –∫–∞–∂–¥—ã–º –¥–Ω–µ–º!",
    "üé® –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Ç–≤–æ—Ä–µ–Ω–∏–µ! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!",
    "üéØ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –¢—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –≤—Å–µ –ª—É—á—à–µ –∏ –ª—É—á—à–µ!",
    "üåà –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –¢–≤–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç!"
]

@router.callback_query(F.data == "creativity")
async def show_creativity_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞"""
    await callback.message.edit_text(
        "üé® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –¢–≤–æ—Ä—á–µ—Å—Ç–≤–∞!\n\n"
        "–ó–¥–µ—Å—å —Ç–µ–±—è –∂–¥—É—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ:\n"
        "‚Ä¢ –†–∏—Å–æ–≤–∞–Ω–∏—é üé®\n"
        "‚Ä¢ –ë—É–º–∞–∂–Ω–æ–º—É —Ç–≤–æ—Ä—á–µ—Å—Ç–≤—É üìÑ\n"
        "‚Ä¢ –õ–µ–ø–∫–µ üè∫\n\n"
        "–í—ã–±–µ—Ä–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!",
        reply_markup=CreativityKeyboard.get_menu_keyboard()
    )
    await callback.answer()

@router.callback_query(F.data.startswith("creativity_"))
async def show_section_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞"""
    section = callback.data.split("_")[1]
    info = SECTION_DESCRIPTIONS.get(section, {})
    
    await state.update_data(current_section=section)
    
    await callback.message.edit_text(
        info.get("description", "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞"),
        reply_markup=CreativityKeyboard.get_section_keyboard()
    )
    await callback.answer()

@router.callback_query(F.data == "start_masterclass")
async def start_masterclass(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç —Å–µ—Å—Å–∏—é –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞"""
    data = await state.get_data()
    section = data.get("current_section")
    
    db = Database()
    video = await db.get_next_creativity_video(callback.from_user.id, section)
    
    if video:
        await state.update_data(current_video=video)
        await send_masterclass_video(callback.message, video, False)
    else:
        await callback.message.edit_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤.",
            reply_markup=CreativityKeyboard.get_section_keyboard()
        )
    await callback.answer()

async def send_masterclass_video(message, video, is_completed):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
        direct_link = await get_direct_download_link(video['video_url'])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è
        text = (
            f"üé® {video['title']}\n\n"
            f"{video['description']}\n\n"
            "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ –∏ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å!"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        success = await send_video(
            bot=message.bot,
            chat_id=message.chat.id,
            video_url=direct_link,
            caption=text,
            reply_markup=CreativityKeyboard.get_masterclass_keyboard(video['id'], is_completed)
        )
        
        if not success:
            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=CreativityKeyboard.get_section_keyboard()
            )
            
    except Exception as e:
        logging.error(f"Error sending masterclass video: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=CreativityKeyboard.get_section_keyboard()
        )

@router.callback_query(F.data.startswith("complete_masterclass_"))
async def complete_masterclass(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ—á–∞–µ—Ç –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π"""
    try:
        video_id = int(callback.data.split('_')[2])
        db = Database()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤–∏–¥–µ–æ
        current_video = await db.get_creativity_video_by_id(video_id)
        if not current_video:
            await callback.message.answer("–û—à–∏–±–∫–∞: –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return

        # –û—Ç–º–µ—á–∞–µ–º –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π
        success = await db.complete_creativity_masterclass(callback.from_user.id, video_id)
        
        if success:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω "–ê–ª–º–∞–∑"
            token = await db.get_token_by_id(9)
            if token:
                text = (
                    "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å!\n"
                    f"–ü–æ–ª—É—á–∞–µ—à—å –Ω–∞–≥—Ä–∞–¥—É: {token['emoji']} {token['name']}!\n\n"
                    f"–¢–µ–∫—É—â–∏–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å: {current_video['title']}"
                )
            else:
                text = (
                    "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å!\n\n"
                    f"–¢–µ–∫—É—â–∏–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å: {current_video['title']}"
                )
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            markup = CreativityKeyboard.get_masterclass_keyboard(
                current_video['id'],
                True  # –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω
            )
        else:
            text = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            markup = CreativityKeyboard.get_masterclass_keyboard(video_id, False)
        
        await callback.message.answer(text, reply_markup=markup)
        await callback.answer()
        
    except Exception as e:
        logging.error(f"Error in complete_masterclass: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=CreativityKeyboard.get_masterclass_keyboard(video_id, False)
        )
        await callback.answer()

@router.callback_query(F.data.startswith("postpone_masterclass_"))
async def postpone_masterclass(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π"""
    data = await state.get_data()
    section = data.get("current_section")
    
    db = Database()
    next_video = await db.get_next_creativity_video(callback.from_user.id, section)
    
    if next_video:
        await state.update_data(current_video=next_video)
        await send_masterclass_video(callback.message, next_video, False)
    else:
        await callback.message.edit_text(
            "–ë–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤.",
            reply_markup=CreativityKeyboard.get_section_keyboard()
        )
    
    await callback.answer()

@router.callback_query(F.data.startswith("send_photo_"))
async def request_photo(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ñ–æ—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã"""
    await callback.answer()
    await state.set_state(CreativityStates.waiting_for_photo)
    await callback.message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã. "
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–û—Ç–º–µ–Ω–∞'.",
        reply_markup=CreativityKeyboard.get_photo_cancel_keyboard()
    )

@router.message(F.photo, CreativityStates.waiting_for_photo)
async def process_photo(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ"""
    data = await state.get_data()
    current_video = data.get("current_video")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ –∫–∞–Ω–∞–ª
    await message.bot.send_photo(
        chat_id="@doskadlavsex",
        photo=message.photo[-1].file_id,
        caption=(
            f"üé® –ù–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ –æ—Ç @{message.from_user.username}!\n"
            f"–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å: {current_video['title']}"
        )
    )
    
    await message.answer(
        "üåü –°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! –û–Ω–æ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞!",
        reply_markup=CreativityKeyboard.get_masterclass_keyboard(current_video['id'], False)
    )
    await state.clear()

@router.callback_query(F.data == "cancel_photo")
async def cancel_photo(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ"""
    data = await state.get_data()
    current_video = data.get("current_video")
    
    await state.clear()
    await send_masterclass_video(callback.message, current_video, False)
    await callback.answer()

@router.callback_query(F.data.startswith(("next_masterclass_", "prev_masterclass_")))
async def navigate_masterclasses(callback: CallbackQuery, state: FSMContext):
    """–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞–º–∏"""
    try:
        direction = "next" if callback.data.startswith("next") else "prev"
        video_id = int(callback.data.split("_")[2])
        
        data = await state.get_data()
        section = data.get("current_section")
        
        db = Database()
        next_video = await db.get_next_creativity_video(
            callback.from_user.id,
            section,
            current_id=video_id,
            direction=direction
        )
        
        if next_video:
            await state.update_data(current_video=next_video)
            await send_masterclass_video(callback.message, next_video, False)
        else:
            direction_text = "—Å–ª–µ–¥—É—é—â–∏—Ö" if direction == "next" else "–ø—Ä–µ–¥—ã–¥—É—â–∏—Ö"
            await callback.message.answer(
                f"–í —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç {direction_text} –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤.",
                reply_markup=CreativityKeyboard.get_masterclass_keyboard(video_id, True)
            )
        
        await callback.answer()
    except Exception as e:
        logging.error(f"Error in navigate_masterclasses: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞–º–∏.",
            reply_markup=CreativityKeyboard.get_back_button()
        )
        await callback.answer()

@router.callback_query(F.data == "back_to_creativity")
async def back_to_creativity(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞"""
    await callback.answer()
    await state.clear()
    await callback.message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞:",
        reply_markup=CreativityKeyboard.get_menu_keyboard()
    ) 