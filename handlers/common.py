from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from database.database import Database
from keyboards.main_menu import MainMenuKeyboard
from config import config

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    db = Database()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
    args = message.text.split()
    if len(args) > 1 and args[1].startswith('ref_'):
        try:
            referrer_id = int(args[1].split('_')[1])
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if referrer_id != message.from_user.id:
                await db.add_referral(referrer_id, message.from_user.id)
        except (ValueError, IndexError):
            pass
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    await db.add_user(
        message.from_user.id,
        message.from_user.username,
        message.from_user.first_name
    )
    
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ë–æ—Ç–†–∞–∑–≤–∏–≤–∞—à–∫–∞!\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ:\n"
        "‚Ä¢ –í—ã–ø–æ–ª–Ω—è—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n"
        "‚Ä¢ –£—á–∏—Ç—å—Å—è —Ä–∏—Å–æ–≤–∞—Ç—å\n"
        "‚Ä¢ –†–∞–∑–≤–∏–≤–∞—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —É—Å–ø–µ—Ö–∏\n\n"
        "–í—ã–±–µ—Ä–∏, —á–µ–º —Ö–æ—á–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è:",
        reply_markup=MainMenuKeyboard.get_keyboard(message.from_user.id)
    )

@router.message(Command("menu"))
async def cmd_menu(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        reply_markup=MainMenuKeyboard.get_keyboard(message.from_user.id)
    )

@router.callback_query(F.data == "back_to_menu")
async def back_to_menu(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        reply_markup=MainMenuKeyboard.get_keyboard(callback.from_user.id)
    )
    await callback.answer()

@router.callback_query(F.data == "admin_panel")
async def show_admin_panel(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    if callback.from_user.id not in config.ADMIN_IDS:
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", show_alert=True)
        return
    
    await callback.message.answer(
        "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
        reply_markup=MainMenuKeyboard.get_keyboard(callback.from_user.id)
    )
    await callback.answer()

@router.callback_query(F.data == "photo_board")
async def show_photo_board(callback: CallbackQuery):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–∞–Ω–∞–ª —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏"""
    await callback.message.edit_text(
        f"üé® –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–∞–±–æ—Ç—ã –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤!\n\n"
        f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É: {config.PHOTO_CHANNEL_ID}\n"
        f"–¢–∞–º —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏ –∫—Ä–∞—Å–∏–≤—ã—Ö —Ä–∞–±–æ—Ç!"
    )
    await callback.answer() 