from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

class RiddlesKeyboard:
    @staticmethod
    def get_menu_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –∑–∞–≥–∞–¥–æ–∫"""
        kb = InlineKeyboardBuilder()
        kb.button(text="üéØ –ó–∞–≥–∞–¥–∫–∏", callback_data="start_riddles")
        kb.button(text="‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        kb.adjust(1)
        return kb.as_markup()

    @staticmethod
    def get_navigation_keyboard(current_index: int, total_riddles: int, is_completed: bool = False) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∑–∞–≥–∞–¥–∫–∞–º"""
        kb = InlineKeyboardBuilder()
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if current_index > 0:
            kb.button(text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è", callback_data=f"prev_riddle_{current_index}")
        if current_index < total_riddles - 1:
            kb.button(text="–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è", callback_data=f"next_riddle_{current_index}")
        kb.adjust(2)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        if not is_completed:
            kb.button(text="‚úçÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"answer_riddle_{current_index}")
        kb.button(text="üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–≤–µ—Ç", callback_data=f"show_answer_{current_index}")
        kb.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_riddles_menu")
        kb.adjust(1)
        
        return kb.as_markup()

    @staticmethod
    def get_cancel_keyboard(current_index: int) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
        kb = InlineKeyboardBuilder()
        kb.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=f"cancel_answer_{current_index}")
        return kb.as_markup() 