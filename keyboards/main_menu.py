from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config import config

class MainMenuKeyboard:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    
    @staticmethod
    def get_keyboard(user_id: int = None) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        
        Args:
            user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        """
        builder = InlineKeyboardBuilder()
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
        builder.button(text="üìù –ó–∞–¥–∞–Ω–∏—è –Ω–∞ –¥–µ–Ω—å", callback_data="daily_tasks")
        builder.button(text="üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ", callback_data="creativity")
        builder.button(text="üß© –†–µ–±—É—Å—ã", callback_data="puzzles")
        builder.button(text="‚ùì –ó–∞–≥–∞–¥–∫–∏", callback_data="riddles")
        builder.button(text="üëÑ –°–∫–æ—Ä–æ–≥–æ–≤–æ—Ä–∫–∏", callback_data="tongue_twisters")
        
        # –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
        builder.button(text="üß† –ù–µ–π—Ä–æ–≥–∏–º–Ω–∞—Å—Ç–∏–∫–∞", callback_data="neuro_exercises")
        builder.button(text="üëÖ –ê—Ä—Ç–∏–∫—É–ª—è—Ü–∏—è", callback_data="articular_exercises")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
        builder.button(text="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="achievements")
        builder.button(text="üñº –î–æ—Å–∫–∞ –¥–ª—è –≤—Å–µ—Ö", callback_data="photo_board")
        builder.button(text="üë©‚Äçüë¶ –î–ª—è –º–∞–º", callback_data="for_parents")
        
        # –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω)
        if user_id in config.ADMIN_IDS:
            builder.button(text="‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥, –∫—Ä–æ–º–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
        builder.adjust(1, 2, 1, 1, 1)
        return builder.as_markup() 